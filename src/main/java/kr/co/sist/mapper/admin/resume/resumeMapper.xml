<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.sist.resume.admin">
	<resultMap id="resumeListResultMap" type="kr.co.sist.admin.domain.resume.ResumeListDomain">
	    <result property="resumeId" column="resume_num"/>
	    <result property="recruitTitle" column="recruit_title"/>
	    <result property="userName" column="name"/>
	    <result property="applyDate" column="apply_date" javaType="java.sql.Date"/>
	    <result property="resumeTitle" column="resume_title"/>
	    <result property="career" column="career"/>
	    <result property="addr" column="addr"/>
	    <result property="docPass" column="doc_pass_flag"/>
	    <result property="finalPass" column="final_pass_flag"/>
	</resultMap>
	<resultMap id="resumeDetailResultMap" type="kr.co.sist.admin.domain.resume.ResumeDomain">
		<result property="id" column="resume_num"/>
	    <result property="owner" column="name"/>
	    <result property="email" column="user_id"/>
	    <result property="title" column="title"/>
	    <result property="profile" column="profile_img"/>
	    <result property="birth" column="birth_date"/>
	    <result property="gender" column="gender"/>
	    <result property="tel" column="tel"/>
	    <result property="phone" column="phone"/>
	    <result property="addr" column="addr"/>
	    <result property="introduce" column="self_introduction"/>
	    <result property="inputDate" column="input_date"/>
	    <result property="modifyDate" column="modify_date"/>
	</resultMap>
    <select id="selectResumes" resultMap="resumeListResultMap" parameterType="kr.co.sist.admin.vo.resume.SearchVO">
	    SELECT resume_num, recruit_title, name, apply_date, resume_title, career, addr, doc_pass_flag, final_pass_flag
		FROM (
		    SELECT ROW_NUMBER() OVER (ORDER BY apply.apply_date ASC) AS rnum,
		           recruit.title AS recruit_title,
		           resume.resume_num,
		           users.name,
		           apply.apply_date,
		           resume.title AS resume_title,
		           CASE
		               WHEN c.total_days IS NULL THEN '신입'
		               ELSE '경력(' ||
		                    CASE
		                        WHEN FLOOR(c.total_days / 365) > 0 THEN FLOOR(c.total_days / 365) || '년'
		                        ELSE ''
		                    END ||
		                    CASE
		                        WHEN FLOOR(c.total_days / 365) > 0 AND FLOOR(MOD(c.total_days, 365) / 30) > 0 THEN ' '
		                        ELSE ''
		                    END ||
		                    CASE
		                        WHEN FLOOR(MOD(c.total_days, 365) / 30) > 0 THEN FLOOR(MOD(c.total_days, 365) / 30) || '개월'
		                        WHEN c.total_days > 0 AND FLOOR(MOD(c.total_days, 365) / 30) = 0 THEN
		                            CASE
		                                WHEN FLOOR(c.total_days / 365) = 0 THEN '1개월 미만'
		                                ELSE ''
		                            END
		                        ELSE ''
		                    END || ')'
		           END AS career,
		           resume.addr,
		           CASE
		               WHEN apply.progress_state = '지원완료' THEN '미정'
		               WHEN apply.progress_state = '불합격' THEN '불합격'
		               ELSE '합격'
		           END AS doc_pass_flag,
		           CASE
		               WHEN apply.progress_state = '불합격' THEN '불합격'
		               WHEN apply.progress_state = '최종합격' THEN '합격'
		               ELSE '미정'
		           END AS final_pass_flag
		    FROM apply
		             LEFT JOIN resume ON apply.resume_num = resume.resume_num
		             LEFT JOIN recruit ON recruit.recruit_num = apply.recruit_num
		             LEFT JOIN users ON resume.user_id = users.user_id
		             LEFT JOIN education ON resume.resume_num = education.resume_num
		             LEFT JOIN (
		        SELECT resume_num,
		               SUM(
		                       CASE
		                           WHEN resignation_date IS NULL THEN TRUNC(CURRENT_DATE) - join_date
		                           ELSE resignation_date - join_date
		                       END
		                   ) AS total_days
		        FROM career
		        GROUP BY resume_num
		    ) c ON apply.resume_num = c.resume_num
		    <where>
		        <choose>
		            <when test="category == 0 and keyword != null and keyword != ''">
		                AND users.name LIKE '%' || #{keyword} || '%'
		            </when>
		            <when test="category == 1 and keyword != null and keyword != ''">
		                AND resume.title LIKE '%' || #{keyword} || '%'
		            </when>
		            <when test="category == 2 and keyword != null and keyword != ''">
		                AND resume.self_introduction LIKE '%' || #{keyword} || '%'
		            </when>
		            <when test="category == 3 and keyword != null and keyword != ''">
		                AND resume.addr LIKE '%' || #{keyword} || '%'
		            </when>
		        </choose>
		        <if test="startDate != null">
		            AND apply.apply_date >= #{startDate}
		        </if>
		        <if test="endDate != null">
		            AND apply.apply_date <![CDATA[ <= ]]> #{endDate}
		        </if>
		        <if test="career != null and career != ''">
				    AND (
				        CASE 
				            WHEN #{career} = '신입' AND c.total_days IS NULL THEN 1
				            WHEN #{career} = '경력' AND c.total_days IS NOT NULL THEN 1
				            WHEN #{career} != '신입' AND #{career} != '경력' THEN 1
				            ELSE 0
				        END
				    ) = 1
				</if>
		        <if test="recruitId != null">
		            AND apply.recruit_num = #{recruitId}
		        </if>
		        <if test="endSchool != null and endSchool != ''">
		        	AND education.school_classification = #{endSchool}
		        </if>
		    </where>
		)
		WHERE rnum BETWEEN #{startNum} AND #{endNum}
	</select>
	<select id="selectResumeCount" resultType="int" parameterType="kr.co.sist.admin.vo.resume.SearchVO">
		SELECT COUNT(*) AS total_count
		FROM (
		    SELECT ROW_NUMBER() OVER (ORDER BY apply.apply_date ASC) AS rnum,
		           recruit.title AS recruit_title,
		           resume.resume_num,
		           users.name,
		           apply.apply_date,
		           resume.title AS resume_title,
		           CASE
		               WHEN c.total_days IS NULL THEN '신입'
		               ELSE '경력(' ||
		                    CASE
		                        WHEN FLOOR(c.total_days / 365) > 0 THEN FLOOR(c.total_days / 365) || '년'
		                        ELSE ''
		                    END ||
		                    CASE
		                        WHEN FLOOR(c.total_days / 365) > 0 AND FLOOR(MOD(c.total_days, 365) / 30) > 0 THEN ' '
		                        ELSE ''
		                    END ||
		                    CASE
		                        WHEN FLOOR(MOD(c.total_days, 365) / 30) > 0 THEN FLOOR(MOD(c.total_days, 365) / 30) || '개월'
		                        WHEN c.total_days > 0 AND FLOOR(MOD(c.total_days, 365) / 30) = 0 THEN
		                            CASE
		                                WHEN FLOOR(c.total_days / 365) = 0 THEN '1개월 미만'
		                                ELSE ''
		                            END
		                        ELSE ''
		                    END || ')'
		           END AS career,
		           resume.addr,
		           CASE
		               WHEN apply.progress_state = '지원완료' THEN '미정'
		               WHEN apply.progress_state = '불합격' THEN '불합격'
		               ELSE '합격'
		           END AS doc_pass_flag,
		           CASE
		               WHEN apply.progress_state = '불합격' THEN '불합격'
		               WHEN apply.progress_state = '최종합격' THEN '합격'
		               ELSE '미정'
		           END AS final_pass_flag
		    FROM apply
		             LEFT JOIN resume ON apply.resume_num = resume.resume_num
		             LEFT JOIN recruit ON recruit.recruit_num = apply.recruit_num
		             LEFT JOIN users ON resume.user_id = users.user_id
		             LEFT JOIN education ON resume.resume_num = education.resume_num
		             LEFT JOIN (
		        SELECT resume_num,
		               SUM(
		                       CASE
		                           WHEN resignation_date IS NULL THEN TRUNC(CURRENT_DATE) - join_date
		                           ELSE resignation_date - join_date
		                       END
		                   ) AS total_days
		        FROM career
		        GROUP BY resume_num
		    ) c ON apply.resume_num = c.resume_num
		    <where>
		        <choose>
		            <when test="category == 0 and keyword != null and keyword != ''">
		                AND users.name LIKE '%' || #{keyword} || '%'
		            </when>
		            <when test="category == 1 and keyword != null and keyword != ''">
		                AND resume.title LIKE '%' || #{keyword} || '%'
		            </when>
		            <when test="category == 2 and keyword != null and keyword != ''">
		                AND resume.self_introduction LIKE '%' || #{keyword} || '%'
		            </when>
		            <when test="category == 3 and keyword != null and keyword != ''">
		                AND resume.addr LIKE '%' || #{keyword} || '%'
		            </when>
		        </choose>
		        <if test="startDate != null">
		            AND apply.apply_date >= #{startDate}
		        </if>
		        <if test="endDate != null">
		            AND apply.apply_date <![CDATA[ <= ]]> #{endDate}
		        </if>
		        <if test="career != null and career != ''">
				    AND (
				        CASE 
				            WHEN #{career} = '신입' AND c.total_days IS NULL THEN 1
				            WHEN #{career} = '경력' AND c.total_days IS NOT NULL THEN 1
				            WHEN #{career} != '신입' AND #{career} != '경력' THEN 1
				            ELSE 0
				        END
				    ) = 1
				</if>
		        <if test="recruitId != null">
		            AND apply.recruit_num = #{recruitId}
		        </if>
		        <if test="endSchool != null and endSchool != ''">
		        	AND education.school_classification = #{endSchool}
		        </if>
		    </where>
		)
	</select>
    <select id="selectMetaResume" parameterType="java.lang.String" resultMap="resumeDetailResultMap">
	    SELECT 
	    	u.name,
	    	u.user_id,
	    	r.title,
	    	r.profile_img,
	    	TO_CHAR(u.birth_date, 'YYYY-MM-DD') as birth_date,
	    	u.gender,
	    	u.tel,
	    	u.phone,
	    	r.addr,
	    	TO_CHAR(r.input_date, 'YYYY-MM-DD') as input_date,
	    	TO_CHAR(r.update_date, 'YYYY-MM-DD') as modify_date,
	        r.self_introduction
	    FROM users u
	    JOIN resume r ON u.user_id = r.user_id
	    WHERE r.resume_num = #{resumeNum}
	</select>
    <select id="selectSkillResume" parameterType="java.lang.String" resultType="java.lang.String">
	    SELECT JSON_OBJECT(
	        'skills' VALUE JSON_ARRAYAGG(
	            JSON_OBJECT(
	                'skill_name' VALUE sl.skill_name
	            )
	        )
	    ) AS skills_json
	    FROM resume r
	    JOIN skill s ON s.resume_num = r.resume_num
	    JOIN skill_list sl ON s.skill_code = sl.skill_code
	    WHERE r.resume_num = #{resumeNum}
	</select>
    <select id="selectEduResume" parameterType="java.lang.String" resultType="java.lang.String">
	    SELECT JSON_OBJECT(
	        'education' VALUE JSON_ARRAYAGG(
	            JSON_OBJECT(
	                'school_classification' VALUE e.school_classification,
	                'school_name'           VALUE e.school_name,
	                'admission_date'        VALUE TO_CHAR(e.admission_date, 'YYYY-MM-DD'),
	                'graduation_date'       VALUE TO_CHAR(e.graduation_date, 'YYYY-MM-DD'),
	                'graduation_state'      VALUE e.graduation_state,
	                'major'                 VALUE e.major,
	                'grades'                VALUE e.grades,
	                'total_score'           VALUE e.total_score
	            )
	        )
	    ) AS education_json
	    FROM resume r
	    JOIN education e ON e.resume_num = r.resume_num
	    WHERE r.resume_num = #{resumeNum}
	</select>
    <select id="selectCareerResume" parameterType="java.lang.String" resultType="java.lang.String">
    	SELECT JSON_OBJECT(
		  'career' VALUE JSON_ARRAYAGG(
		    JSON_OBJECT(
		      'company_name' VALUE ci.company_name,
		      'dname' VALUE c.dname,
		      'join_date' VALUE TO_CHAR(c.join_date, 'YYYY-MM-DD'),
		      'resignation_date' VALUE TO_CHAR(c.resignation_date, 'YYYY-MM-DD'),
		      'job_description' VALUE c.job_description,
		      'position' VALUE c.position,
		      'sal' VALUE c.sal
		    )
		  )
		) AS career_json
		FROM resume r
		JOIN career c ON c.resume_num = r.resume_num
		JOIN companyinfo ci ON ci.company_code = c.company_code
		WHERE r.resume_num = #{resumeNum}
    </select>
    <select id="selectCertificationResume" parameterType="java.lang.String" resultType="java.lang.String">
	    SELECT JSON_OBJECT(
		  'certifications' VALUE JSON_ARRAYAGG(
		    JSON_OBJECT(
		      'certificate_name' VALUE cert.certificate_name,
		      'publisher' VALUE cert.publisher,
		      'acquisition_date' VALUE TO_CHAR(cert.acquisition_date, 'YYYY-MM-DD')
		    )
		  )
		) AS certifications_json
		FROM resume r
		JOIN certificate cert ON cert.resume_num = r.resume_num
		WHERE r.resume_num = #{resumeNum}
	</select>
    <select id="selectLanguageResume" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT JSON_OBJECT(
		  'languages' VALUE JSON_ARRAYAGG(
		    JSON_OBJECT(
		      'language' VALUE lang.language,
		      'test_name' VALUE lang.test_name,
		      'lang_level' VALUE lang.lang_level,
		      'category' VALUE lang.category,
		      'aquisition_date' VALUE TO_CHAR(lang.aquisition_date, 'YYYY-MM-DD')
		    )
		  )
		) AS languages_json
		FROM resume r
		JOIN language lang ON lang.resume_num = r.resume_num
		WHERE r.resume_num = #{resumeNum}
    </select>
</mapper>