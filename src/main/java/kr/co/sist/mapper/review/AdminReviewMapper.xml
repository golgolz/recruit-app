<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.sist.mapper.admin.review.AdminReviewMapper">

  <!-- ID 검색 -->
  <select id="searchReviewById" parameterType="String" resultType="kr.co.sist.admin.vo.review.ReviewVO">
    SELECT
        REVIEW_NUM AS reviewNum,
        USER_ID AS userId,
        (SELECT NAME FROM USERS WHERE USER_ID = REVIEW.USER_ID) AS author,
        TITLE AS title,
        INPUT_DATE AS inputDate,
        RECOMMEND AS recommend,
        CASE
            WHEN DELETE_FLAG = 'Y' THEN 'Yes'
            ELSE 'No'
        END AS deleteFlag
    FROM
        REVIEW
    WHERE
        USER_ID LIKE '%' || #{userId} || '%'
</select>

  <!-- 이름 검색 -->
  <select id="searchReviewByName" parameterType="String" resultType="kr.co.sist.admin.vo.review.ReviewVO">
    SELECT
        REVIEW.REVIEW_NUM AS reviewNum,
        REVIEW.USER_ID AS userId,
        USERS.NAME AS author,
        REVIEW.TITLE AS title,
        REVIEW.INPUT_DATE AS inputDate,
        REVIEW.RECOMMEND AS recommend,
        CASE
            WHEN REVIEW.DELETE_FLAG = 'Y' THEN 'Yes'
            ELSE 'No'
        END AS deleteFlag
    FROM
        REVIEW
    JOIN
        USERS ON REVIEW.USER_ID = USERS.USER_ID
    WHERE
        USERS.NAME LIKE '%' || #{name} || '%'
</select>

  <!-- 제목 또는 내용 검색 -->
 <select id="searchReviewByTitleOrContent" parameterType="String" resultType="kr.co.sist.admin.vo.review.ReviewVO">
    SELECT
        REVIEW.REVIEW_NUM AS reviewNum,
        REVIEW.USER_ID AS userId,
        USERS.NAME AS author,
        REVIEW.TITLE AS title,
        REVIEW.CONTENT AS content,
        REVIEW.INPUT_DATE AS inputDate,
        REVIEW.RECOMMEND AS recommend,
        CASE
            WHEN REVIEW.DELETE_FLAG = 'Y' THEN 'Yes'
            ELSE 'No'
        END AS deleteFlag
    FROM
        REVIEW
    JOIN
        USERS ON REVIEW.USER_ID = USERS.USER_ID
    WHERE
        USERS.NAME LIKE '%' || #{keyword} || '%'
        OR REVIEW.TITLE LIKE '%' || #{keyword} || '%'
        OR REVIEW.CONTENT LIKE '%' || #{keyword} || '%'
</select>

  <!-- 리뷰 상세 조회 -->
<select id="getReviewDetailsForUpdate" parameterType="int" resultType="kr.co.sist.admin.vo.review.ReviewDetailVO">
    SELECT
        R.REVIEW_NUM AS reviewNum,
        R.USER_ID AS userId,
        (SELECT NAME FROM USERS WHERE USER_ID = R.USER_ID) AS author,
        R.TITLE AS title,
        R.CONTENT AS content,
        R.INPUT_DATE AS inputDate,
        R.RECOMMEND AS recommend,
        R.DELETE_FLAG AS deleteFlag,
        (SELECT COMPANY_NAME FROM COMPANYINFO WHERE COMPANY_CODE = R.COMPANY_CODE) AS companyName,
        (SELECT LOGO FROM COMPANYINFO WHERE COMPANY_CODE = R.COMPANY_CODE) AS logo
    FROM
        REVIEW R
    WHERE
        R.REVIEW_NUM = #{reviewNum}
</select>

  <!-- 리뷰 업데이트 -->
  <update id="updateReview" parameterType="kr.co.sist.admin.vo.review.ReviewVO">
    UPDATE REVIEW
    SET 
        TITLE = #{title},
        CONTENT = #{content},
        INPUT_DATE = SYSDATE
    WHERE 
        REVIEW_NUM = #{reviewNum}
  </update>

  <!-- 리뷰 삭제 -->
  <delete id="deleteReview" parameterType="int">
    DELETE FROM REVIEW
    WHERE REVIEW_NUM = #{reviewNum}
  </delete>

  <!-- 모든 리뷰 검색 -->
  <select id="getAllReviews" resultType="kr.co.sist.admin.vo.review.ReviewVO">
    SELECT
        REVIEW_NUM AS reviewNum,
        USER_ID AS userId,
        (SELECT NAME FROM USERS WHERE USER_ID = REVIEW.USER_ID) AS author,
        TITLE AS title,
        INPUT_DATE AS inputDate,
        RECOMMEND AS recommend,
        CASE
            WHEN DELETE_FLAG = 'Y' THEN 'Yes'
            ELSE 'No'
        END AS deleteFlag
    FROM
        REVIEW
  </select>
</mapper>
